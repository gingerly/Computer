*Center pixel 0 and add negative and positive values around the center. Example: Sobel Operator. 

*Use Correlation of Sobel and Image to get edge map in x and y directions.

*Try Smoothing before doing edge detection. Take second derivative over smoothed edge image. 

*Computational efficient convolution property: d(h*f)/dx = d(h)/d(x)*f. 
Associativity of convolution allows us to change which operators were applied first.

*Canny Edge Detector:
1. Smoothing derivatives to suppress noise and compute gradient.
2. Threshold to find regions of significant gradient.
3. Thin to get localized edge pixels.
4. Connect the pixels. (Low and High Threshold(start edges))

*Non-Maximal Suppression.
Find the maximum along the already derived edge map line. Suppress other pixels.

*High Thresholding initiates strong edges.


